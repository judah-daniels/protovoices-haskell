[{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Ix\">Ix</a> (m :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) i j a = <a href=\"#v:Ix\">Ix</a> {<ul class=\"subs\"><li><a href=\"#v:runIx\">runIx</a> :: m a</li></ul>}","name":"Ix Ix runIx","module":"Control.Monad.Trans.Ix","link":"Control-Monad-Trans-Ix.html#t:Ix"},{"display_html":"<a href=\"#v:liftIx\">liftIx</a> :: m a -&gt; <a href=\"Control-Monad-Trans-Ix.html#t:Ix\" title=\"Control.Monad.Trans.Ix\">Ix</a> m i i a","name":"liftIx","module":"Control.Monad.Trans.Ix","link":"Control-Monad-Trans-Ix.html#v:liftIx"},{"display_html":"<a href=\"#v:unsafeLiftIx\">unsafeLiftIx</a> :: m a -&gt; <a href=\"Control-Monad-Trans-Ix.html#t:Ix\" title=\"Control.Monad.Trans.Ix\">Ix</a> m i j a","name":"unsafeLiftIx","module":"Control.Monad.Trans.Ix","link":"Control-Monad-Trans-Ix.html#v:unsafeLiftIx"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BindSyntax\">BindSyntax</a> (x :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (y :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (z :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | x y -&gt; z, x z -&gt; y, y z -&gt; x <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-62--62--61-\">(&gt;&gt;=)</a> :: x a -&gt; (a -&gt; y b) -&gt; z b</li><li><a href=\"#v:-62--62-\">(&gt;&gt;)</a> :: x a -&gt; y b -&gt; z b</li></ul>","name":"BindSyntax >>= >>","module":"Language.Haskell.DoNotation","link":"Language-Haskell-DoNotation.html#t:BindSyntax"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PureSyntax\">PureSyntax</a> (x :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pure\">pure</a> :: a -&gt; x a</li><li><a href=\"#v:return\">return</a> :: a -&gt; x a</li></ul>","name":"PureSyntax return pure","module":"Language.Haskell.DoNotation","link":"Language-Haskell-DoNotation.html#t:PureSyntax"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"../base-4.16.4.0/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m =&gt; <a href=\"#t:Monad\">Monad</a> (m :: <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"Monad","module":"Language.Haskell.DoNotation","link":"Language-Haskell-DoNotation.html#t:Monad"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"../indexed-0.1.3/Data-Functor-Indexed.html#t:IxApplicative\" title=\"Data.Functor.Indexed\">IxApplicative</a> m =&gt; <a href=\"#t:IxMonad\">IxMonad</a> (m :: k -&gt; k -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.16.4.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"IxMonad","module":"Language.Haskell.DoNotation","link":"Language-Haskell-DoNotation.html#t:IxMonad"}]