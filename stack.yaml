# This file was automatically generated by 'stack init'
#
# Some commonly used options have been documented as comments in this file.
# For advanced use and comprehensive documentation of the format, please see:
# https://docs.haskellstack.org/en/stable/yaml_configuration/

# Resolver to choose a 'specific' stackage snapshot or a compiler version.
# A snapshot resolver dictates the compiler version and the set of packages
# to be used for project dependencies. For example:
#
# resolver: lts-3.5
# resolver: nightly-2015-09-21
# resolver: ghc-7.10.2
#
# The location of a snapshot can be provided as a file or url. Stack assumes
# a snapshot provided as a file might change, whereas a url resource does not.
#
# resolver: ./custom-snapshot.yaml
# resolver: https://example.com/snapshots/2018-01-01.yaml
resolver: lts-20.0

# User packages to be built.
# Various formats can be used as shown in the example below.
#
# packages:
# - some-directory
# - https://example.com/foo/bar/baz-0.0.2.tar.gz
#   subdirs:
#   - auto-update
#   - wai
packages:
- .
# Dependency packages to be pulled from upstream that are not in the resolver.
# These entries can reference officially published versions as well as
# forks / in-progress versions pinned to a git hash. For example:
#
# extra-deps:
# - acme-missiles-0.3
# - git: https://github.com/commercialhaskell/stack.git
#   commit: e7b331f14bcffb8367cd58fbfc8b40ec7642100a
#

extra-deps:
# local packages
<<<<<<< HEAD
# - ../haskell-musicology/musicology-pitch
# - ../haskell-musicology/musicology-time
# - ../haskell-musicology/musicology-core
# - ../haskell-musicology/musicology-musicxml
# - ../inference/conjugate-programs/
- git: https://github.com/DCMLab/haskell-musicology.git
  commit: cccbf4e248e8a25d9a99816366bed2d65d789e57
  subdirs:
  - musicology-pitch
  - musicology-time
  - musicology-core
  - musicology-musicxml
- git: https://github.com/DCMLab/conjugate-haskell-programs.git
  commit: f2f48f7942605722494b2cd58be573b85dadc106
=======
- ../haskell-musicology/musicology-pitch
- ../haskell-musicology/musicology-time
- ../haskell-musicology/musicology-core
- ../haskell-musicology/musicology-musicxml
# - git: https://github.com/DCMLab/haskell-musicology.git
#   commit: de3babd16d7b8cd5a62b2f95303ac89e150cfcdb
#   subdirs:
#   - musicology-pitch
#   - musicology-core
#   - musicology-musicxml
- ../conjugate-haskell-programs/ # TODO: make this refer to a git repo

# newer version of random
- random-1.2.1@sha256:8bee24dc0c985a90ee78d94c61f8aed21c49633686f0f1c14c5078d818ee43a2,6598

# other packages
- diagrams-lib-1.4.3@sha256:04f77778d4b550d3c8e54440800685f88467bef91075e82e009a8a6f45c51033,8232
- diagrams-svg-1.4.3@sha256:36708b0b4cf35507ccf689f1a25f6f81b8f41c2c4c2900793de820f66d4e241c,3181
# - diagrams-1.4@sha256:3e36369e84115b900fd9dcb570672a188339a470eb19ca62170775cd835cf8ca,5483
>>>>>>> e89a1c575ab71fd64d9f2ce2c1d4caeea86508d2

# transitive deps
#   for haskell-musicology stuff
- Frames-0.7.3@sha256:35ad00d5a8897bb0fd01b204b0d51729a35a0b2138f61ecaeee8f1791b0ce4a4,9011
- readable-0.3.1@sha256:ea550740bbee9ae46c6bbf1c5e5185818a1d37509b855c640b0a7f2dfba6dc37,1121

# allow-newer: true

# Override default flag values for local packages and extra-deps
# flags: {}

# Extra package databases containing global packages
# extra-package-dbs: []

# Control whether we use the GHC we find on the path
# system-ghc: true
#
# Require a specific version of stack, using version ranges
# require-stack-version: -any # Default
# require-stack-version: ">=2.3"
#
# Override the architecture used by stack, especially useful on Windows
# arch: i386
# arch: x86_64
#
# Extra directories used by stack for building
# extra-include-dirs: [/path/to/dir]
# extra-lib-dirs: [/path/to/dir]
#
# Allow a newer minor version of GHC than the snapshot specifies
# compiler-check: newer-minor
